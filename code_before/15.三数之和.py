#
# @lc app=leetcode.cn id=15 lang=python3
#
# [15] 三数之和
#

# @lc code=start
class Solution:
    def threeSum(self, nums: List[int]) -> List[List[int]]:
        print(len([[-15,1,14],[-15,2,13],[-15,5,10],[-15,6,9],[-15,7,8],[-14,0,14],[-14,1,13],[-14,3,11],[-14,5,9],[-14,6,8],[-14,7,7],[-13,-1,14],[-13,0,13],[-13,2,11],[-13,3,10],[-13,5,8],[-13,6,7],[-12,-2,14],[-12,-1,13],[-12,1,11],[-12,2,10],[-12,3,9],[-12,5,7],[-12,6,6],[-11,-3,14],[-11,-2,13],[-11,0,11],[-11,1,10],[-11,2,9],[-11,3,8],[-11,5,6],[-9,-5,14],[-9,-4,13],[-9,-2,11],[-9,-1,10],[-9,0,9],[-9,1,8],[-9,2,7],[-9,3,6],[-8,-6,14],[-8,-5,13],[-8,-3,11],[-8,-2,10],[-8,-1,9],[-8,0,8],[-8,1,7],[-8,2,6],[-8,3,5],[-7,-7,14],[-7,-6,13],[-7,-4,11],[-7,-3,10],[-7,-2,9],[-7,-1,8],[-7,0,7],[-7,1,6],[-7,2,5],[-6,-5,11],[-6,-4,10],[-6,-3,9],[-6,-2,8],[-6,-1,7],[-6,0,6],[-6,1,5],[-5,-5,10],[-5,-4,9],[-5,-3,8],[-5,-2,7],[-5,-1,6],[-5,0,5],[-5,2,3],[-4,-4,8],[-4,-3,7],[-4,-2,6],[-4,-1,5],[-4,1,3],[-4,2,2],[-3,-3,6],[-3,-2,5],[-3,0,3],[-3,1,2],[-2,-1,3],[-2,0,2],[-2,1,1],[-1,-1,2],[-1,0,1],[0,0,0]]))
        ans = []
        for x_i, x in enumerate(nums):
            for y_i, y in enumerate(nums):
                for z_i, z in enumerate(nums):
                    if x_i != y_i and x_i != z_i and z_i != y_i and x+y+z == 0:
                        ans_n = sorted([x,y,z])
                        if ans_n not in ans:
                            ans.append(ans_n)
        print(len(ans))
        return ans
# @lc code=end

